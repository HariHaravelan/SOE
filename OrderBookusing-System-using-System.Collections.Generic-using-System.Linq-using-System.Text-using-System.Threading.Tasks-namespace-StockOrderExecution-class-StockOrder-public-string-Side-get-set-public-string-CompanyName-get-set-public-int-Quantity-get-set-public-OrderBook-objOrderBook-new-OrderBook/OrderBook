using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace StockOrderExecution
{
    class StockOrder
    {
        public string Side { get; set; }
        public string CompanyName { get; set; }
        public int Quantity { get; set; }

        public OrderBook objOrderBook = new OrderBook();

     //   public Company objCompany = new Company();

        private static StringBuilder resultstring = new StringBuilder();

        public void ReadOrder()
        {
            if (Side.Equals("buy", StringComparison.InvariantCultureIgnoreCase))
            {
                ProcessOrder(CompanyName, Quantity * -1);
                
            }
            else
            {
                ProcessOrder(CompanyName, Quantity);
            }

          

        }

       

        private void ProcessOrder(string m_CompanyName, int m_Quantity)
        {
  


            int _availablestocks = 0;
            int _remainingstocks = 0;
            string _status = string.Empty;
            if (objOrderBook.HasCompanyAvailable(m_CompanyName))
            {
                _availablestocks = objOrderBook.AvailableStocks(m_CompanyName);

                
                _remainingstocks = _availablestocks + m_Quantity;

                _status = _remainingstocks == 0 ? "Closed" : "Open";

                objOrderBook.UpdateOrderBook(m_CompanyName, _remainingstocks);

                AddToTransaction(Side, m_CompanyName, m_Quantity, _remainingstocks, _status);
            }

            else
            {
                objOrderBook.UpdateOrderBook(m_CompanyName, m_Quantity);

                AddToTransaction(Side, m_CompanyName, m_Quantity, m_Quantity, "Open");
            }
        }

     

        private void AddToTransaction(string m_side, string m_companyname, int m_quantity, int m_remainingquantity, string m_status)
        {
            resultstring.Append(m_side + "\t" + m_companyname + "\t" + Math.Abs(m_quantity) + "\t" + Math.Abs(m_remainingquantity) + "\t" + m_status + "\n");
        }


        public override string ToString()
        {
            return resultstring.ToString();
        }


    }


}
